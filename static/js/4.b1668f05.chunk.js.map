{"version":3,"file":"static/js/4.b1668f05.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/SearchField/SearchField.module.css?c18e","components/SearchField/SearchField.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import PropTypes from 'prop-types';\nimport css from './Section.module.css'\n\nconst Section = ({ title, children }) => {\n  return ( <section className={css.section}>\n      <h1 className={css.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\",\"icon\":\"ContactForm_icon__wGMYw\",\"btn_icon\":\"ContactForm_btn_icon__ECBVW\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) => {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.trim())\n        )\n    } \n);","import { useDispatch, useSelector } from 'react-redux';\nimport { BsPhoneFill } from \"react-icons/bs\";\nimport { FaUserPlus } from \"react-icons/fa\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport css from './ContactForm.module.css'\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit= e => {\n    e.preventDefault();\n    const field = e.target;\n    const name = field.elements.name.value;\n    const number = field.elements.number.value;\n\n    const foundContact = contacts.find(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    if (!foundContact) {\n      dispatch(addContact({ name, number }));\n      field.reset();\n      Notify.success(`${name} is added to the contacts !`);\n    } else {\n      Notify.info(`${name} is already in contacts !`);\n    }\n  };\n\nreturn ( \n<form onSubmit={onFormSubmit}>\n        <label className={css.label}>Name:\n         <input className={css.input}\n      type=\"text\"\n      name=\"name\"\n      placeholder=\"Enter name...\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      required\n      /> \n        </label>\n        <label className={css.label}>Number<BsPhoneFill size={20} className={css.icon}/>:\n         <input className={css.input}\n      type=\"tel\"\n      name=\"number\"\n      placeholder=\"Enter number...\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      required\n    /> \n        </label>\n    <button type=\"submit\" className={css.btn}><FaUserPlus size={20} className={css.btn_icon}/>Add contact</button>\n    </form>\n    );\n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"list_item\":\"ContactList_list_item__HbCqX\",\"list_name\":\"ContactList_list_name__aKc+U\",\"list_number\":\"ContactList_list_number__unziZ\",\"list_btn\":\"ContactList_list_btn__f7ITl\",\"icon\":\"ContactList_icon__Ly80F\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { FiUser } from \"react-icons/fi\";\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css'\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectVisibleContacts);\n\n    const onDelete = e => {\n        const id = e.target.id;\n        dispatch(deleteContact(id));\n    };\n\n    return (\n       <ul className={css.list}>\n            {contacts.map(contact => (\n            <li className={css.list_item} key={contact.id}>\n                <p className={css.list_name}>\n                        <FiUser size={20} className={css.icon} />\n                        {contact.name}: <span className={css.list_number}>{contact.phone}</span>\n                </p>\n                <button\n                    type=\"button\"\n                    onClick={onDelete}\n                    className={css.list_btn}\n                    id={contact.id}\n                >\n                Delete\n                </button>\n            </li>\n            ))}\n        </ul>\n    );\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"SearchField_label__YnZdF\",\"input\":\"SearchField_input__a0El7\",\"icon\":\"SearchField_icon__4HG16\"};","import { useDispatch } from 'react-redux';\nimport css from './SearchField.module.css'\nimport { FaSearch } from \"react-icons/fa\";\nimport { setContactsFilter } from '../../redux/contacts/filterSlice';\n\nconst SearchField = () => {\n    const dispatch = useDispatch();\n\n    const onContactsFilter = e => {\n    const filter = e.target.value.toLowerCase();\n    dispatch(setContactsFilter(filter));\n};\n    return (\n    <label className={css.label}><FaSearch size={20} className={css.icon}/> Find contacts by the name:\n        <input className={css.input}\n        type=\"text\" \n        name=\"filter\"\n        placeholder=\"Enter name...\"\n        onChange={onContactsFilter} />\n    </label>\n        );\n    }\n\nexport default SearchField;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Section from 'components/Section';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport SearchField from 'components/SearchField';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\n\nexport default function Contacts() {\nconst dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\nuseEffect(() => {\ndispatch(fetchContacts());\n}, [dispatch]);\n    \nreturn (\n  <div\n    style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      color: '#010101'\n    }}\n  >\n<Section title=\"Phonebook:\">\n<ContactForm />\n</Section>\n<Section title=\"Contacts:\">\n<SearchField />\n{isLoading && !error && <b>Request in progress...</b>}\n<ContactList />\n</Section>\n  </div>\n);\n}"],"names":["title","children","className","css","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","trim","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","field","target","elements","value","number","find","Notify","addContact","reset","type","placeholder","pattern","required","size","onDelete","id","deleteContact","map","phone","onClick","onChange","setContactsFilter","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","color"],"sourceRoot":""}